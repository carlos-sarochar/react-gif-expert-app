{"version":3,"sources":["components/AddCategorias.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorias","setCategorias","useState","txtCategoria","setTxtCategoria","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","placeholder","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagenes","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAqCeA,EAlCO,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEHC,mBAAS,IAFN,mBAEpCC,EAFoC,KAEtBC,EAFsB,KAiB3C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAaK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAuBO,OAChDN,EAAgB,MAMpB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAlBS,SAACP,GAClBF,EAAgBE,EAAEQ,OAAOF,QAkBjBG,YAAY,gC,+BCzBfC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYbM,GAZa,4CAAH,sDCkBLO,EAjBK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OAEI,sBAAKc,UAAU,yCAAf,UAEI,qBACIC,IAAKf,EACLgB,IAAMN,IAEV,kCAAMA,EAAN,WC6BGO,EAnCC,SAAC,GAAqB,IAAlBnB,EAAiB,EAAjBA,UAAiB,ECHT,SAAEA,GAAgB,IAAD,EAEff,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAW,WACNxB,EAASC,GACLwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIrB,CAAEpB,IAECqB,EDX0BK,CAAc1B,GAAnC2B,EAJqB,EAI1BpB,KAAea,EAJW,EAIXA,QAStB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,2BAEX,qBAAKA,UAAU,YAAf,SAEMW,EAASlB,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAESA,GADCA,EAAIC,aEQvBiB,EAjCM,WAAM,MAIa3C,mBAAU,IAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAYvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAEA,6BAEQS,EAAWgB,KAAK,SAAET,GAAF,OACZ,cAAC,EAAD,CAEIA,UAAYA,GADNA,YCnBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f9d53d0e.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategorias = ( { setCategorias } ) => {\r\n\r\n    const [txtCategoria, setTxtCategoria] = useState('');  \r\n\r\n    const handleChange = (e) => {\r\n        setTxtCategoria(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (txtCategoria.trim().length > 2) {\r\n            setCategorias( categorias => [ txtCategoria, ...categorias] );\r\n            setTxtCategoria('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type = 'text'\r\n                value = {txtCategoria}\r\n                onChange = { handleChange }   \r\n                placeholder='Ingrese una categoría'         \r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategorias.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategorias;","\r\nexport const getGifs = async ( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=hHFlWcnv2gzadvUUzioINTT769Cr7z9H`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n   return gifs;\r\n}\r\n","import React  from 'react'\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n    \r\n        <div className='card animate__animated animate__bounce'>\r\n            \r\n            <img \r\n                src={url}  \r\n                alt={ title }\r\n            />\r\n            <p> { title } </p>\r\n    \r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default GifGridItem;","//import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from '../components/GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nconst GifGrid = ( { categoria } ) => {\r\n\r\n    //const [imagenes, setImagenes] = useState([]);\r\n\r\n    const {data:imagenes, loading} = useFetchGifs( categoria );\r\n\r\n    // // Al agregar un arreglo vacio como segundo argumento del useEffect,\r\n    // // me aseguro que el useEffect se ejecute una sola vez\r\n    // useEffect( () => {\r\n    //     getGifs( categoria )\r\n    //         .then( img => setImagenes(img)); \r\n    // }, [ categoria ]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'> { categoria } </h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Cargando ....</p> }\r\n\r\n            { <div className='card-grid'>\r\n                { \r\n                    imagenes.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id}\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div> }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\"\r\nimport { getGifs }  from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n         getGifs( categoria )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n     }, [ categoria ]);\r\n\r\n    return state;\r\n}\r\n\r\n","import { React, useState } from \"react\";\r\nimport AddCategorias from \"./components/AddCategorias\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = ['Fútbol','Tenis','Basketball'];\r\n    \r\n    const [categorias, setCategorias] = useState( [] );\r\n    // const handleAdd = () => {\r\n    //     let xRand =  Math.trunc(100000*Math.random())\r\n    //     console.log(xRand)\r\n    //     // ...categorias (crea un nuevo arreglo igual a categorias)\r\n    //     setCategorias( [...categorias, `Deporte ${xRand}`]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategorias setCategorias={setCategorias}  />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( ( categoria ) => (\r\n                        <GifGrid \r\n                            key={ categoria }\r\n                            categoria={ categoria }\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}